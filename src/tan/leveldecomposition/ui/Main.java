/*
 * LevelDecompositionUI.java
 *
 * Created on 8 maart 2007, 12:28
 */

package tan.leveldecomposition.ui;

import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.JFileChooser;
import javax.swing.filechooser.*;
import java.io.File;

import tan.leveldecomposition.*;
import tan.leveldecomposition.dynkindiagram.*;

/**
 *
 * @author  Teake Nutma
 */
public class Main extends javax.swing.JFrame
{
	FileFilter ddFilter;
	FileFilter rsFilter;
	
	/** Creates new form LevelDecompositionUI */
	public Main()
	{
		/** Try to set the Look and Feel to the system native look and feel */
		UIManager uiManager = new UIManager();
		try
		{
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Exception e)
		{
		}
		initComponents();
		
		ddFilter = new FileNameExtensionFilter("Dynkin diagram (*.dd)", "dd");
		rsFilter = new FileNameExtensionFilter("Root system (*.rs)", "rs");
		
	}
	
	
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        popup = new javax.swing.JFrame();
        optionPane = new javax.swing.JOptionPane();
        TabbedPane = new javax.swing.JTabbedPane();
        algebraSetup = new tan.leveldecomposition.ui.AlgebraSetup();
        levelDecomposition = new tan.leveldecomposition.ui.LevelDecomposition();
        MenuBar = new javax.swing.JMenuBar();
        MenuFile = new javax.swing.JMenu();
        MenuItemLoadAlgebra = new javax.swing.JMenuItem();
        MenuItemLoadRoots = new javax.swing.JMenuItem();
        MenuItemSaveAlgebra = new javax.swing.JMenuItem();
        MenuItemSaveRoots = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItemPrint = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        MenuItemExit = new javax.swing.JMenuItem();
        MenuEdit = new javax.swing.JMenu();
        MenuItemClear = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        MenuItemLoadE11 = new javax.swing.JMenuItem();
        MenuHelp = new javax.swing.JMenu();
        MenuItemHelp = new javax.swing.JMenuItem();
        MenuItemAbout = new javax.swing.JMenuItem();

        popup.setTitle("About");
        popup.setMinimumSize(new java.awt.Dimension(220, 180));
        popup.setResizable(false);

        javax.swing.GroupLayout popupLayout = new javax.swing.GroupLayout(popup.getContentPane());
        popup.getContentPane().setLayout(popupLayout);
        popupLayout.setHorizontalGroup(
            popupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        popupLayout.setVerticalGroup(
            popupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Level decomposition");
        TabbedPane.addTab("Algebra Setup", algebraSetup);

        TabbedPane.addTab("Level Decomposition", levelDecomposition);

        MenuFile.setMnemonic('f');
        MenuFile.setLabel("File");
        MenuItemLoadAlgebra.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemLoadAlgebra.setMnemonic('o');
        MenuItemLoadAlgebra.setLabel("Load Dynkin diagram");
        MenuItemLoadAlgebra.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemLoadAlgebraActionPerformed(evt);
            }
        });

        MenuFile.add(MenuItemLoadAlgebra);

        MenuItemLoadRoots.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemLoadRoots.setMnemonic('r');
        MenuItemLoadRoots.setText("Load root system");
        MenuItemLoadRoots.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemLoadRootsActionPerformed(evt);
            }
        });

        MenuFile.add(MenuItemLoadRoots);

        MenuItemSaveAlgebra.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemSaveAlgebra.setMnemonic('s');
        MenuItemSaveAlgebra.setLabel("Save Dynkin diagram");
        MenuItemSaveAlgebra.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemSaveAlgebraActionPerformed(evt);
            }
        });

        MenuFile.add(MenuItemSaveAlgebra);

        MenuItemSaveRoots.setText("Save root system");
        MenuItemSaveRoots.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemSaveRootsActionPerformed(evt);
            }
        });

        MenuFile.add(MenuItemSaveRoots);

        MenuFile.add(jSeparator1);

        jMenuItemPrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemPrint.setMnemonic('p');
        jMenuItemPrint.setText("Print representation table");
        jMenuItemPrint.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItemPrintActionPerformed(evt);
            }
        });

        MenuFile.add(jMenuItemPrint);

        MenuFile.add(jSeparator3);

        MenuItemExit.setMnemonic('x');
        MenuItemExit.setText("Exit");
        MenuItemExit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemExitActionPerformed(evt);
            }
        });

        MenuFile.add(MenuItemExit);

        MenuBar.add(MenuFile);

        MenuEdit.setMnemonic('e');
        MenuEdit.setText("Edit");
        MenuItemClear.setMnemonic('c');
        MenuItemClear.setText("Clear diagram");
        MenuItemClear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemClearActionPerformed(evt);
            }
        });

        MenuEdit.add(MenuItemClear);

        MenuEdit.add(jSeparator2);

        MenuItemLoadE11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, java.awt.event.InputEvent.SHIFT_MASK));
        MenuItemLoadE11.setText("E_11 preset");
        MenuItemLoadE11.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemLoadE11ActionPerformed(evt);
            }
        });

        MenuEdit.add(MenuItemLoadE11);

        MenuBar.add(MenuEdit);

        MenuHelp.setMnemonic('h');
        MenuHelp.setText("Help");
        MenuItemHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        MenuItemHelp.setMnemonic('h');
        MenuItemHelp.setText("Help");
        MenuItemHelp.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemHelpActionPerformed(evt);
            }
        });

        MenuHelp.add(MenuItemHelp);

        MenuItemAbout.setMnemonic('a');
        MenuItemAbout.setText("About");
        MenuItemAbout.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                MenuItemAboutActionPerformed(evt);
            }
        });

        MenuHelp.add(MenuItemAbout);

        MenuBar.add(MenuHelp);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jMenuItemPrintActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemPrintActionPerformed
	{//GEN-HEADEREND:event_jMenuItemPrintActionPerformed
		levelDecomposition.printTable();
	}//GEN-LAST:event_jMenuItemPrintActionPerformed
	
	private void MenuItemSaveRootsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemSaveRootsActionPerformed
	{//GEN-HEADEREND:event_MenuItemSaveRootsActionPerformed
		JFileChooser chooser = new JFileChooser("");
		chooser.addChoosableFileFilter(rsFilter);
		chooser.setSelectedFile(new File(Globals.group.type + "_height_" + Globals.group.constructedHeight));
		chooser.setDialogTitle("Save root system");
		int returnVal = chooser.showSaveDialog(this);
		
		if ( returnVal == chooser.APPROVE_OPTION )
		{
		/* To create a URL for a file on the local file-system, we simply
		 * pre-pend the "file" protocol to the absolute path of the file.
		 */
			String fileURL = chooser.getSelectedFile().getAbsolutePath();
			if(!rsFilter.accept(chooser.getSelectedFile()))
				fileURL += ".rs";
			Globals.group.saveTo(fileURL);
		}
	}//GEN-LAST:event_MenuItemSaveRootsActionPerformed
	
	private void MenuItemLoadRootsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemLoadRootsActionPerformed
	{//GEN-HEADEREND:event_MenuItemLoadRootsActionPerformed
		String fileURL;
		JFileChooser chooser;
		int returnVal;
		
		chooser = new JFileChooser("");
		chooser.addChoosableFileFilter(rsFilter);
		chooser.setDialogTitle("Open root system");
		returnVal = chooser.showOpenDialog(this);
		
		if ( returnVal == chooser.APPROVE_OPTION )
		{
		/* To create a URL for a file on the local file-system, we simply
		 * pre-pend the "file" protocol to the absolute path of the file.
		 */
			fileURL = chooser.getSelectedFile().getAbsolutePath();
			if(!Globals.group.loadFrom(fileURL))
			{
				optionPane.showMessageDialog(
						popup,
						"The root system does not belong to this Dynkin diagram.",
						"Failed to load root system",
						optionPane.WARNING_MESSAGE);
			}
		}
	}//GEN-LAST:event_MenuItemLoadRootsActionPerformed
	
    private void MenuItemHelpActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemHelpActionPerformed
    {//GEN-HEADEREND:event_MenuItemHelpActionPerformed
		optionPane.showMessageDialog(
				popup,
				"Dynkin diagram interaction: \n \n" +
				"Add a node: \n   Left mouse \n" +
				"Remove node: \n   Control + left mouse \n" +
				"Add connection: \n   Right mouse \n" +
				"Remove connection: \n   Control + right mouse \n" +
				"Toggle node: \n   Middle mouse or Alt + left mouse",
				"Help",
				optionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_MenuItemHelpActionPerformed
	
	private void MenuItemSaveAlgebraActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemSaveAlgebraActionPerformed
	{//GEN-HEADEREND:event_MenuItemSaveAlgebraActionPerformed
		JFileChooser chooser = new JFileChooser("");
		chooser.addChoosableFileFilter(ddFilter);
		chooser.setSelectedFile(new File(Globals.getDynkinDiagramType() + ".dd"));
		chooser.setDialogTitle("Save Dynkin diagram");
		int returnVal = chooser.showSaveDialog(this);
		
		if ( returnVal == chooser.APPROVE_OPTION )
		{
		/* To create a URL for a file on the local file-system, we simply
		 * pre-pend the "file" protocol to the absolute path of the file.
		 */
			String fileURL = chooser.getSelectedFile().getAbsolutePath();
			if(!ddFilter.accept(chooser.getSelectedFile()))
				fileURL += ".dd";
			DynkinDiagram.saveTo(fileURL);
		}
	}//GEN-LAST:event_MenuItemSaveAlgebraActionPerformed
	
	private void MenuItemLoadAlgebraActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemLoadAlgebraActionPerformed
	{//GEN-HEADEREND:event_MenuItemLoadAlgebraActionPerformed
		String fileURL;
		JFileChooser chooser;
		int returnVal;
		
		chooser = new JFileChooser("");
		chooser.addChoosableFileFilter(ddFilter);
		chooser.setDialogTitle("Open Dynkin diagram");
		returnVal = chooser.showOpenDialog(this);
		
		if ( returnVal == chooser.APPROVE_OPTION )
		{
		/* To create a URL for a file on the local file-system, we simply
		 * pre-pend the "file" protocol to the absolute path of the file.
		 */
			fileURL = chooser.getSelectedFile().getAbsolutePath();
			DynkinDiagram.loadFrom(fileURL);
			algebraSetup.Update();
		}
	}//GEN-LAST:event_MenuItemLoadAlgebraActionPerformed
	
    private void MenuItemLoadE11ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemLoadE11ActionPerformed
    {//GEN-HEADEREND:event_MenuItemLoadE11ActionPerformed
		DynkinDiagram.Clear();
		DynkinDiagram.addNode(2,0);
		DynkinDiagram.addNode(0,1);
		DynkinDiagram.addNode(1,1);
		DynkinDiagram.addNode(2,1);
		DynkinDiagram.addNode(3,1);
		DynkinDiagram.addNode(4,1);
		DynkinDiagram.addNode(5,1);
		DynkinDiagram.addNode(6,1);
		DynkinDiagram.addNode(7,1);
		DynkinDiagram.addNode(8,1);
		DynkinDiagram.addNode(9,1);
		DynkinDiagram.modifyConnection(1,4,true);
		DynkinDiagram.modifyConnection(2,3,true);
		DynkinDiagram.modifyConnection(3,4,true);
		DynkinDiagram.modifyConnection(4,5,true);
		DynkinDiagram.modifyConnection(5,6,true);
		DynkinDiagram.modifyConnection(6,7,true);
		DynkinDiagram.modifyConnection(7,8,true);
		DynkinDiagram.modifyConnection(8,9,true);
		DynkinDiagram.modifyConnection(9,10,true);
		DynkinDiagram.modifyConnection(10,11,true);
		algebraSetup.Update();
    }//GEN-LAST:event_MenuItemLoadE11ActionPerformed
	
    private void MenuItemClearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemClearActionPerformed
    {//GEN-HEADEREND:event_MenuItemClearActionPerformed
		DynkinDiagram.Clear();
		algebraSetup.Update();
    }//GEN-LAST:event_MenuItemClearActionPerformed
	
    private void MenuItemAboutActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemAboutActionPerformed
    {//GEN-HEADEREND:event_MenuItemAboutActionPerformed
		optionPane.showMessageDialog(
				popup,
				"Level Decomposition \n \n Teake Nutma \n t.a.nutma@rug.nl",
				"About",
				optionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_MenuItemAboutActionPerformed
	
    private void MenuItemExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_MenuItemExitActionPerformed
    {//GEN-HEADEREND:event_MenuItemExitActionPerformed
		System.exit(0);
    }//GEN-LAST:event_MenuItemExitActionPerformed
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new Main().setVisible(true);
			}
		});
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu MenuEdit;
    private javax.swing.JMenu MenuFile;
    private javax.swing.JMenu MenuHelp;
    private javax.swing.JMenuItem MenuItemAbout;
    private javax.swing.JMenuItem MenuItemClear;
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenuItem MenuItemHelp;
    private javax.swing.JMenuItem MenuItemLoadAlgebra;
    private javax.swing.JMenuItem MenuItemLoadE11;
    private javax.swing.JMenuItem MenuItemLoadRoots;
    private javax.swing.JMenuItem MenuItemSaveAlgebra;
    private javax.swing.JMenuItem MenuItemSaveRoots;
    private javax.swing.JTabbedPane TabbedPane;
    private tan.leveldecomposition.ui.AlgebraSetup algebraSetup;
    private javax.swing.JMenuItem jMenuItemPrint;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private tan.leveldecomposition.ui.LevelDecomposition levelDecomposition;
    private javax.swing.JOptionPane optionPane;
    private javax.swing.JFrame popup;
    // End of variables declaration//GEN-END:variables
	
}
