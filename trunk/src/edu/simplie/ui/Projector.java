/*
 * RootSpaceDrawer.java
 *
 * Created on 9 April 2007, 12:08
 *
 * This file is part of SimpLie.
 *
 * SimpLie is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SimpLie is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with SimpLie.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


 

package edu.simplie.ui;

import edu.simplie.AlgebraComposite;
import edu.simplie.projections.RootSystemProjector2D;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import org.jdesktop.application.Action;


/*
 * Projector.java
 *
 * Created on 31-mrt-2009, 11:31:31
 *
 * @author  Teake Nutma
 * @version $Rev$, $Date$
 */
public class Projector extends javax.swing.JPanel
{

	private AlgebraComposite		algebras;
	private RootSystemProjector2D	projector2D;

    /** Creates new form Projector */
    public Projector()
	{
        initComponents();
		projector2D = new RootSystemProjector2D();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgMode = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        canvas = new javax.swing.JPanel() {
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                draw(g);
            }
        };
        spinnerMaxHeight = new edu.simplie.ui.reusable.UISpinner();
        jLabel1 = new javax.swing.JLabel();
        rbCoxeter = new javax.swing.JRadioButton();
        rbHasse = new javax.swing.JRadioButton();

        setName("Form"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(edu.simplie.SimpLieApp.class).getContext().getActionMap(Projector.class, this);
        jButton1.setAction(actionMap.get("project")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edu.simplie.SimpLieApp.class).getContext().getResourceMap(Projector.class);
        jButton1.setText(resourceMap.getString("projector.draw")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        canvas.setBackground(new java.awt.Color(255, 255, 255));
        canvas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        canvas.setName("canvas"); // NOI18N

        org.jdesktop.layout.GroupLayout canvasLayout = new org.jdesktop.layout.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(
            canvasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 539, Short.MAX_VALUE)
        );
        canvasLayout.setVerticalGroup(
            canvasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 384, Short.MAX_VALUE)
        );

        spinnerMaxHeight.setMinValue(0);
        spinnerMaxHeight.setName("spinnerMaxHeight"); // NOI18N

        jLabel1.setText(resourceMap.getString("projector.maxHeight")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        bgMode.add(rbCoxeter);
        rbCoxeter.setSelected(true);
        rbCoxeter.setText(resourceMap.getString("projector.rbCoxeter")); // NOI18N
        rbCoxeter.setName("rbCoxeter"); // NOI18N

        bgMode.add(rbHasse);
        rbHasse.setText(resourceMap.getString("projector.rbHasse")); // NOI18N
        rbHasse.setName("rbHasse"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(spinnerMaxHeight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(rbCoxeter)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rbHasse)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 133, Short.MAX_VALUE)
                        .add(jButton1))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, canvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jLabel1)
                    .add(spinnerMaxHeight, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rbCoxeter)
                    .add(rbHasse))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(canvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents



	public void setAlgebrasComposite(AlgebraComposite algebras)
	{
		this.algebras = algebras;
		projector2D.setAlgebrasComposite(algebras);
	}

	@Action
	public void project()
	{
		// Project
		int mode = ( rbCoxeter.isSelected() ) ? RootSystemProjector2D.COXETER_MODE : RootSystemProjector2D.HASSE_MODE;
		projector2D.setMode(mode);
		projector2D.project(spinnerMaxHeight.getValue());
		// And draw
		canvas.repaint();
	}

	public void draw(Graphics g)
	{
		Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
		projector2D.draw(g2,canvas.getBounds());
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgMode;
    private javax.swing.JPanel canvas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton rbCoxeter;
    private javax.swing.JRadioButton rbHasse;
    private edu.simplie.ui.reusable.UISpinner spinnerMaxHeight;
    // End of variables declaration//GEN-END:variables

}
